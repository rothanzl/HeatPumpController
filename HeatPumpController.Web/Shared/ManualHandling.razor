@using HeatPumpController.Web.Services
@using HeatPumpController.Controller.Svc.Technology.Sensors.Temperature.Mqtt
@using HeatPumpController.Controller.Svc.Technology.Sensors
@using System.Globalization
@inject IViewModel _ViewModel
@inject IRoomTemperatures _RoomTemperatures;
@implements IDisposable

<h3>@AutomationState mode</h3>
<p>@ProcessState</p>

<div class="row">
    <div class="col">
        <p>
            <button @onclick="ModeChangeButtonClick">@ModeChangeButtonText</button>
        </p>
    </div>
</div>

<div class="row">
    <div class="col">
        <p>
            <button @onclick="CloseAllButtonClick" disabled="@_ViewModel.Automation">Close All</button>
        </p>
    </div>
</div>

<div class="row">
    <div class="col">
        <p>
            <button @onclick="OpenAllButtonClick" disabled="@_ViewModel.Automation">Open All</button>
        </p>
    </div>
</div>

<div class="row">
    <div class="col">
        <h4>Controll heating</h4>
        <RelayButton ParameterName="@nameof(_ViewModel.HeatPumpRelay)"/>
        <RelayButton ParameterName="@nameof(_ViewModel.UpperValveRelay)"/>
        <RelayButton ParameterName="@nameof(_ViewModel.LowerValveRelay)"/>
        <RelayButton ParameterName="@nameof(_ViewModel.ExtraHeatingRelay)"/>
    </div>
</div>

<div class="row">
    <div class="col">
        <h4>Controll valves</h4>
        
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Room</th>
                <th scope="col">Temperature</th>
                <th scope="col">Control</th>
                <th scope="col">SP</th>
                <th scope="col">Valid sensor signal</th>
            </tr>
            </thead>
            <tbody>
            <tr>
                <th scope="row">Bath room</th>
                <td>@_RoomTemperatures.BathRoom.Value.ToString("F1") °C</td>
                <td>
                    <RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitBathRoomRelay)"/>
                    <RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitBathRoomWallRelay)"/>
                </td>
                <td>@RoomTemperaturesSetPoints.BathRoom.ToString("F1") °C</td>
                <td>
                    @_RoomTemperatures.BathRoom.Valid
                    @_RoomTemperatures.BathRoom.ReadTimeStampElapsed().ToShortString()
                    
                </td>
            </tr>
            <tr>
                <th scope="row">Kitchen</th>
                <td>@_RoomTemperatures.Kitchen.Value.ToString("F1") °C</td>
                <td><RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitKitchenRelay)"/></td>
                <td>@RoomTemperaturesSetPoints.Kitchen.ToString("F1") °C</td>
                <td>
                    @_RoomTemperatures.Kitchen.Valid
                    @_RoomTemperatures.Kitchen.ReadTimeStampElapsed().ToShortString()
                </td>
            </tr>
            <tr>
                <th scope="row">Living room</th>
                <td>@_RoomTemperatures.LivingRoom.Value.ToString("F1") °C</td>
                <td><RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitLivingRoomRelay)"/></td>
                <td>@RoomTemperaturesSetPoints.LivingRoom.ToString("F1") °C</td>
                <td>
                    @_RoomTemperatures.LivingRoom.Valid
                    @_RoomTemperatures.LivingRoom.ReadTimeStampElapsed().ToShortString()
                </td>
            </tr>
            <tr>
                <th scope="row">Bed room</th>
                <td>@_RoomTemperatures.BedRoom.Value.ToString("F1") °C</td>
                <td><RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitBedRoomRelay)"/></td>
                <td>@RoomTemperaturesSetPoints.BedRoom.ToString("F1") °C</td>
                <td>
                    @_RoomTemperatures.BedRoom.Valid
                    @_RoomTemperatures.BedRoom.ReadTimeStampElapsed().ToShortString()
                </td>
            </tr>
            <tr>
                <th scope="row">Small room</th>
                <td>@_RoomTemperatures.SmallRoom.Value.ToString("F1") °C</td>
                <td><RelayButton ParameterName="@nameof(_ViewModel.HeatingCircuitSmallRoomRelay)"/></td>
                <td>@RoomTemperaturesSetPoints.SmallRoom.ToString("F1") °C</td>
                <td>
                    @_RoomTemperatures.SmallRoom.Valid
                    @_RoomTemperatures.SmallRoom.ReadTimeStampElapsed().ToShortString()
                </td>
            </tr>
            <tr>
                <th scope="row">Tech room</th>
                <td>@_RoomTemperatures.TechRoom.Value.ToString("F1") °C</td>
                <td></td>
                <td></td>
                <td>
                    @_RoomTemperatures.TechRoom.Valid
                    @_RoomTemperatures.TechRoom.ReadTimeStampElapsed().ToShortString()
                </td>
            </tr>
            </tbody>
        </table>
        
    </div>
</div>

@code {

    protected override void OnInitialized()
    {
        _ViewModel.DataChanged += DataChangedHandler;
        base.OnInitialized();
    }

    private string AutomationState => _ViewModel.Automation ? "Auto" : "Man";
    private string ModeChangeButtonText => _ViewModel.Automation ? "Turn to Manual mode" : "Turn to Automate mode";

    private string ProcessState => _ViewModel.ProcessState.ToString();
    
    private void ModeChangeButtonClick()
    {
        _ViewModel.Automation = !_ViewModel.Automation;
    }

    private void DataChangedHandler() => InvokeAsync(StateHasChanged);

    public void Dispose()
    {
        _ViewModel.DataChanged -= DataChangedHandler;

    }

    private Task CloseAllButtonClick() => _ViewModel.SetAllRelays(true);

    private Task OpenAllButtonClick() => _ViewModel.SetAllRelays(false);

}